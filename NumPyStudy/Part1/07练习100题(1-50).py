#************************一、基础部分**************************#
#########################1.导入################################
import numpy as np
#########################2.查看版本################################
print(np.__version__)
# 1.18.1
#************************二、创建数组**************************#
#########################3.通过列表创建一维数组################################
print(np.array([1, 2, 3]))
# [1 2 3]
#########################4.通过列表创建二维数组################################
print(np.array([[1, 2, 3], [4, 5, 6]]))
# [[1 2 3]
#  [4 5 6]]
#########################5.创建全为0的二维数组################################
print(np.zeros((2, 3)))
# [[0. 0. 0.]
#  [0. 0. 0.]]
#########################6.创建全为1的二维数组################################
print(np.ones((2, 3)))
# [[1. 1. 1.]
#  [1. 1. 1.]]
#########################7.创建一维等差数组################################
print(np.arange(10))
# [0 1 2 3 4 5 6 7 8 9]
#########################8.创建二维等差数组################################
print(np.arange(10).reshape(2, 5))
# [[0 1 2 3 4]
#  [5 6 7 8 9]]
#########################9.创建单位矩阵################################
print(np.eye(3))
# [[1. 0. 0.]
#  [0. 1. 0.]
#  [0. 0. 1.]]
#########################10.创建等间距一维数组################################
print(np.linspace(0, 10, 5))
# [ 0.   2.5  5.   7.5 10. ]
#########################11.创建二维随机数组################################
print(np.random.rand(2, 3))
# [[0.60514399 0.78199187 0.2234233 ]
#  [0.60957859 0.72434891 0.95344218]]
#########################12.创建二维随机整数数组（数值小于5）################################
print(np.random.randint(0, 5, (2, 3)))
# [[4 4 3]
#  [2 0 4]]
#########################13.依据自定义函数创建数组################################
print(np.fromfunction(lambda i, j: i + j, (3, 3)))
# [[0. 1. 2.]
#  [1. 2. 3.]
#  [2. 3. 4.]]
#************************三、数组运算*******************************#
#------------------------生成一维数组-------------------------------#
a = np.array([10, 20, 30, 40, 50])
b = np.arange(1, 6)
print(a)
# [10 20 30 40 50]
print(b)
# [1 2 3 4 5]
#########################14.一维数组加法运算################################
print(a + b)
# [11 22 33 44 55]
#########################15.一维数组减法运算################################
print(a - b)
# [ 9 18 27 36 45]
#########################16.一维数组乘法运算################################
print(a * b)
# [ 10  40  90 160 250]
#########################17.一维数组除法运算################################
print(a / b)
# [10. 10. 10. 10. 10.]
#------------------------生成二维数组-------------------------------#
A = np.array([[1, 2], [3, 4]])
B = np.array([[5, 6], [7, 8]])
print(A)
# [[1 2]
#  [3 4]]
print(B)
# [[5 6]
#  [7 8]]
#########################18.矩阵加法运算################################
print(A + B)
# [[ 6  8]
#  [10 12]]
#########################19.矩阵减法运算################################
print(A - B)
# [[-4 -4]
#  [-4 -4]]
#########################20.矩阵元素间乘法运算################################
print(A * B)
# [[ 5 12]
#  [21 32]]
#########################21.矩阵点乘################################
print(np.dot(A, B))
print(np.mat(A) * np.mat(B))
# [[19 22]
#  [43 50]]
#########################22.数乘矩阵################################
print(2 * A)
# [[2 4]
#  [6 8]]
#########################23.矩阵的转置################################
print(A.T)
# [[1 3]
#  [2 4]]
#########################24.矩阵的求逆################################
print(np.linalg.inv(A))
# [[-2.   1. ]
#  [ 1.5 -0.5]]
#************************四、数学函数******************************#
#########################25.三角函数################################
deg = 30
print(np.sin(np.radians(deg)))
# 0.49999999999999994
#########################26.以自然对数函数为底数的指数函数################################
print(np.exp(1))
# 2.718281828459045
#########################27.开平方################################
print(np.sqrt(4))
# 2.0
#########################28.立方################################
print(np.power(2, 3))
# 8
#************************五、数组切片和索引******************************#
#########################29.一维数组索引################################
c = np.array([1, 2, 3, 4, 5])
print(c[1])
# 2
#########################30.一维数组切片################################
print(c[:])
# [1 2 3 4 5]
print(c[0:])
# [1 2 3 4 5]
print(c[:-1])
# [1 2 3 4]
print(c[0:2])
# [1 2]
#########################31.二维数组索引################################
C = np.array([[1, 2, 3], [4, 5, 6], [7, 8, 9]])
print(C[0])
# [1 2 3]
print(C[1, 1])
# 5
#########################32.二维数组切片（取第二行或第二列）################################
print(C[:, 1])
# [2 5 8]
print(C[1, :])
# [4 5 6]
#########################33.二维数组切片（取第二行和第三行或第二列和第三列）################################
print(C[:, 1:3])
# [[2 3]
#  [5 6]
#  [8 9]]
print(C[1:3, :])
# [[4 5 6]
#  [7 8 9]]
#************************六、数组形状操作******************************#
#------------------------生成二维数组-------------------------------#
d = np.random.randint(0, 10, size=(2, 3))
print(d)
# [[6 7 5]
#  [4 8 5]]
#########################34.查看数组形状################################
print(d.shape)
# (2, 3)
#########################35.更改数组形状（不改变原始数组）################################
print(d.reshape(3, 2))
# [[6 7]
#  [5 4]
#  [8 5]]
#########################36.更改数组形状（改变原始数组）################################
print(d.resize(3, 2))
# None
#########################37.展平数组################################
print(d.ravel())
# [6 7 5 4 8 5]
#------------------------生成示例数组-------------------------------#
D1 = np.random.randint(10, size=(3, 3))
D2 = np.random.randint(10, size=(3, 3))
print(D1)
# [[7 7 7]
#  [0 6 2]
#  [1 1 2]]
print(D2)
# [[0 6 3]
#  [8 5 1]
#  [9 4 9]]
#########################38.垂直拼合数组################################
print(np.vstack((D1, D2)))
# [[7 7 7]
#  [0 6 2]
#  [1 1 2]
#  [0 6 3]
#  [8 5 1]
#  [9 4 9]]
#########################39.水平拼合数组################################
print(np.hstack((D1, D2)))
# [[7 7 7 0 6 3]
#  [0 6 2 8 5 1]
#  [1 1 2 9 4 9]]
#########################40.沿横轴分割数组################################
print(np.hsplit(D1, 3))
# array([[7],
#        [0],
#        [1]]), array([[7],
#        [6],
#        [1]]), array([[7],
#        [2],
#        [2]])]
#########################41.沿纵轴分割数组################################
print(np.vsplit(D1, 3))
# [array([[7, 7, 7]]), array([[0, 6, 2]]), array([[1, 1, 2]])]
#************************七、数组排序******************************#
#------------------------生成示例数组-------------------------------#
e = np.array([[1, 4, 3], [6, 2, 5], [4, 7, 2]])
print(e)
# [[1 4 3]
#  [6 2 5]
#  [4 7 2]]
#########################42.返回每列/行的最大值################################
print(np.max(e, axis=0))
# [6 7 5]
print(np.max(e, axis=1))
# [4 6 7]
#########################43.返回每列/行的最小值################################
print(np.min(e, axis=0))
# [1 2 2]
print(np.min(e, axis=1))
# [1 2 2]
#########################44.返回每列/行的最大值索引################################
print(np.argmax(e, axis=0))
# [1 2 1]
print(np.argmax(e, axis=1))
# [1 0 1]
#########################45.返回每列/行的最小值索引################################
print(np.argmin(e, axis=0))
# [0 1 2]
print(np.argmin(e, axis=1))
# [0 1 2]
#************************八、数组统计******************************#
#########################46.统计数组各列的中位数################################
print(np.median(e, axis=0))
# [4. 4. 3.]
#########################47.统计数组各行的算数平方根################################
print(np.mean(e, axis=1))
# [2.66666667 4.33333333 4.33333333]
#########################48.统计数组各列的加权平均值################################
print(np.average(e, axis=0))
# [3.66666667 4.33333333 3.33333333]
#########################49.统计数组各行的方差################################
print(np.var(e, axis=1))
# [1.55555556 2.88888889 4.22222222]
#########################50.统计数组各列的标准偏差################################
print(np.std(e, axis=0))
# [2.05480467 2.05480467 1.24721913]