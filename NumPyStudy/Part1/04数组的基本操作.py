import numpy as np

a = np.arange(10)
print(a)
# [0 1 2 3 4 5 6 7 8 9]
##########################1.重设形状#############################
print(a.reshape((2, 5)))
# [[0 1 2 3 4]
#  [5 6 7 8 9]]
##########################2.数组展开#############################
print(np.ravel(a.reshape(2, 5)))
# [0 1 2 3 4 5 6 7 8 9]
print(np.ravel(a.reshape(2, 5), order='F'))
# [0 5 1 6 2 7 3 8 4 9]
##########################3.轴移动#############################
b = np.ones((1, 2, 3))
print(b)
# [[[1. 1. 1.]
#   [1. 1. 1.]]]
print(b.shape)
# (1, 2, 3)
print(np.moveaxis(b, 0, -1))
# [[[1.]
#   [1.]
#   [1.]]

#  [[1.]
#   [1.]
#   [1.]]]
print(np.moveaxis(b, 0, -1).shape)
# (2, 3, 1)
##########################4.轴交换#############################
c = np.ones((1, 4, 3))
print(c)
# [[[1. 1. 1.]
#   [1. 1. 1.]
#   [1. 1. 1.]
#   [1. 1. 1.]]]
print(c.shape)
# (1, 4, 3)
print(np.swapaxes(c, 0, 2))
# [[[1.]
#   [1.]
#   [1.]
#   [1.]]

#  [[1.]
#   [1.]
#   [1.]
#   [1.]]

#  [[1.]
#   [1.]
#   [1.]
#   [1.]]]
print(np.swapaxes(c, 0, 2).shape)
# (3, 4, 1)
##########################5.转置#############################
d = np.arange(4).reshape(2, 2)
print(d)
# [[0 1]
#  [2 3]]
print(np.transpose(d))
# [[0 2]
#  [1 3]]
##########################6.维度改变#############################
print(np.atleast_1d([1, 2, 3]))
# [1 2 3]
print(np.atleast_2d([1, 2, 3]))
# [[1 2 3]]
print(np.atleast_3d([1, 2, 3]))
# [[[1]
#   [2]
#   [3]]]
##########################7.类型转换#############################
print(np.asmatrix(d))
# [[0 1]
#  [2 3]]
##########################8.数组链接#############################
a1 = np.array([[1, 2], [3, 4], [5, 6]])
a2 = np.array([[7, 8], [9, 10]])
a3 = np.array([[11, 12]])
print(np.concatenate((a1, a2, a3), axis=0))
# [[ 1  2]
#  [ 3  4]
#  [ 5  6]
#  [ 7  8]
#  [ 9 10]
#  [11 12]]
b1 = np.array([[1, 2], [3, 4], [5, 6]])
b2 = np.array([[7, 8, 9]])
print(np.concatenate((b1, b2.T), axis=1))
# [[1 2 7]
#  [3 4 8]
#  [5 6 9]]
##########################9.数组堆叠#############################
c1 = np.array([1, 2, 3])
c2 = np.array([4, 5, 6])
print(np.stack((c1, c2)))
# [[1 2 3]
#  [4 5 6]]
print(np.stack((c1, c2), axis=-1))
# [[1 4]
#  [2 5]
#  [3 6]]
##########################10.拆分#############################
print(np.split(a, 5))
# [array([0, 1]), array([2, 3]), array([4, 5]), array([6, 7]), array([8, 9])]
print(np.split(a.reshape(2, 5), 2))
# [array([[0, 1, 2, 3, 4]]), array([[5, 6, 7, 8, 9]])]
##########################11.删除#############################
e = np.arange(12).reshape(3, 4)
print(e)
# [[ 0  1  2  3]
#  [ 4  5  6  7]
#  [ 8  9 10 11]]
print(np.delete(e, 2, 1))
# [[ 0  1  3]
#  [ 4  5  7]
#  [ 8  9 11]]
print(np.delete(e, 2, 0))
# [[0 1 2 3]
#  [4 5 6 7]]
##########################12.插入#############################
d1 = np.arange(12).reshape(3, 4)
d2 = np.arange(4)
print(np.insert(d1, 2, d2, 0))
# [[ 0  1  2  3]
#  [ 4  5  6  7]
#  [ 0  1  2  3]
#  [ 8  9 10 11]]
##########################13.附加#############################
print(np.append(d1, d2))
# [ 0  1  2  3  4  5  6  7  8  9 10 11  0  1  2  3]
##########################14.重设尺寸#############################
a.resize(2, 5)
print(a)
# [[0 1 2 3 4]
#  [5 6 7 8 9]]
##########################15.翻转数组#############################
f = np.arange(16).reshape(4, 4)
print(np.fliplr(f))
# [[ 3  2  1  0]
#  [ 7  6  5  4]
#  [11 10  9  8]
#  [15 14 13 12]]
print(np.flipud(f))
# [[12 13 14 15]
#  [ 8  9 10 11]
#  [ 4  5  6  7]
#  [ 0  1  2  3]]
##########################16.Numpy随机数#############################
print(np.random.rand(2, 5))
# [[0.45999197 0.72560698 0.98053907 0.45245919 0.51961881]
#  [0.32939295 0.10894561 0.34425636 0.37098775 0.03538931]]
print(np.random.randn(2, 5))
# [[-0.4810135  -1.11717038  0.84574897 -0.87048391 -1.02269638]
#  [-0.54601632  0.12765813  2.22546639  0.81664516 -0.6502834 ]]
print(np.random.randint(2, 5, 10))
# [3 2 4 3 2 3 3 2 3 4]
print(np.random.random_sample([10]))
# [0.82014023 0.72719807 0.43126885 0.99583573 0.77224697 0.49792291
#  0.69494777 0.5038938  0.9402621  0.83303905]
print(np.random.choice(10, 5))
# [8 0 9 5 3]
##########################17.概率密度分布#############################