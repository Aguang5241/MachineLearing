########################进阶应用############################
import numpy as np
###########51.创建一个 5x5 的二维数组，其中边界值为1，其余值为0##############
a = np.ones((5, 5))
a[1:4, 1:4] = 0
print(a)
# [[1. 1. 1. 1. 1.]
#  [1. 0. 0. 0. 1.]
#  [1. 0. 0. 0. 1.]
#  [1. 0. 0. 0. 1.]
#  [1. 1. 1. 1. 1.]]
###########52.使用数字 0 将一个全为 1 的 5x5 二维数组包围##############
# my solution
b1 = np.ones((7, 7))
b1[0] = b1[6, :] = b1[:, 0] = b1[:, 6] = 0
print(b1)
# the answer
b2 = np.ones((5, 5))
b2 = np.pad(b2, pad_width=1, mode='constant', constant_values=0)
print(b2)
# [[0. 0. 0. 0. 0. 0. 0.]
#  [0. 1. 1. 1. 1. 1. 0.]
#  [0. 1. 1. 1. 1. 1. 0.]
#  [0. 1. 1. 1. 1. 1. 0.]
#  [0. 1. 1. 1. 1. 1. 0.]
#  [0. 1. 1. 1. 1. 1. 0.]
#  [0. 0. 0. 0. 0. 0. 0.]]
###########关于np.diag()##############
c1 = np.arange(3)
c2 = np.arange(9).reshape(3, 3)
print(c1)
# [0 1 2]
print(c2)
# [[0 1 2]
#  [3 4 5]
#  [6 7 8]]
print(np.diag(c1))
# [[0 0 0]
#  [0 1 0]
#  [0 0 2]]
print(np.diag(c2))
# [0 4 8]
###########53. 创建一个 5x5 的二维数组，并设置值 1, 2, 3, 4 落在其对角线下方##############
print(np.diag(np.arange(4) + 1, k=-1))
# [[0 0 0 0 0]
#  [1 0 0 0 0]
#  [0 2 0 0 0]
#  [0 0 3 0 0]
#  [0 0 0 4 0]]
###########54.创建一个 10x10 的二维数组，并使得 1 和 0 沿对角线间隔放置##############
d = np.zeros((10, 10), dtype=int)
d[1::2, ::2] = 1
d[::2, 1::2] = 1
print(d)
# [[0 1 0 1 0 1 0 1 0 1]
#  [1 0 1 0 1 0 1 0 1 0]
#  [0 1 0 1 0 1 0 1 0 1]
#  [1 0 1 0 1 0 1 0 1 0]
#  [0 1 0 1 0 1 0 1 0 1]
#  [1 0 1 0 1 0 1 0 1 0]
#  [0 1 0 1 0 1 0 1 0 1]
#  [1 0 1 0 1 0 1 0 1 0]
#  [0 1 0 1 0 1 0 1 0 1]
#  [1 0 1 0 1 0 1 0 1 0]]
###########55.创建一个 0-10 的一维数组，并将 (1, 9] 之间的数全部反转成负数##############
e = np.arange(11)
e[(e > 1) & (e <= 9)] *= -1
print(e)
# [ 0  1 -2 -3 -4 -5 -6 -7 -8 -9 10]
###########56.找出两个一维数组中相同的元素##############
f1 = np.random.randint(0, 10, 10)
f2 = np.random.randint(0, 10, 10)
print(f1)
# [2 1 5 3 1 6 7 1 3 0]
print(f2)
# [1 4 1 5 3 0 6 5 5 4]
print(np.intersect1d(f1, f2))
# [0 1 3 5 6]
###########57.使用 NumPy 打印昨天、今天、明天的日期##############
yesterday = np.datetime64('today', 'D') - np.timedelta64(1, 'D')
today = np.datetime64('today', 'D')
tomorrow = np.datetime64('today', 'D') + np.timedelta64(1, 'D')
print("yesterday: ", yesterday)
# yesterday:  2020-02-11
print("today: ", today)
# today:  2020-02-12
print("tomorrow: ", tomorrow)
# tomorrow:  2020-02-13
###########58.使用五种不同的方法去提取一个随机数组的整数部分##############
g = np.random.uniform(0, 10, 10)
print("原始值: ", g)
# 原始值:  [4.09419929 1.94149353 0.13721603 2.47006423 8.857896   0.03618758
#  2.25144956 4.00889407 3.39157692 9.65151154]
print("方法 1: ", g - g % 1)
# 方法 1:  [4. 1. 0. 2. 8. 0. 2. 4. 3. 9.]
print("方法 2: ", np.floor(g))
# 方法 2:  [4. 1. 0. 2. 8. 0. 2. 4. 3. 9.]
print("方法 3: ", np.ceil(g)-1)
# 方法 3:  [4. 1. 0. 2. 8. 0. 2. 4. 3. 9.]
print("方法 4: ", g.astype(int))
# 方法 4:  [4 1 0 2 8 0 2 4 3 9]
print("方法 5: ", np.trunc(g))
# 方法 5:  [4. 1. 0. 2. 8. 0. 2. 4. 3. 9.]
###########59.创建一个 5x5 的矩阵，其中每行的数值范围从 1 到 5##############
# my solution
h1 = np.random.randint(1, 6, size=(5, 5), dtype=int)
print(h1)
# [[1 5 1 1 1]
#  [4 1 5 3 1]
#  [5 3 2 4 1]
#  [1 4 4 4 1]
#  [3 3 5 4 5]]
# the answer
h2 = np.zeros((5, 5), dtype=int)
h2 += np.arange(1, 6)
print(h2)
# [[1 2 3 4 5]
#  [1 2 3 4 5]
#  [1 2 3 4 5]
#  [1 2 3 4 5]
#  [1 2 3 4 5]]
###########60.创建一个长度为 5 的等间隔一维数组，其值域范围从 0 到 1，但是不包括 0 和 1##############
i = np.linspace(0, 1, 6, endpoint=False)[1:]
print(i)
# [0.16666667 0.33333333 0.5        0.66666667 0.83333333]