import numpy as np
from matplotlib import pyplot as plt

#####################1.绘制折线图######################
plt.plot([1, 2, 3, 2, 1, 2, 3, 4, 5, 6, 5, 4, 3, 2, 1])
# Fig.01
#####################2.自定义横坐标######################
# plt.plot([2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16],
#          [1, 2, 3, 2, 1, 2, 3, 4, 5, 6, 5, 4, 3, 2, 1])
# Fig.02
#####################3.自定义x，y的正弦曲线图######################
ax = np.linspace(-2 * np.pi, 2 * np.pi, 1000)
ay = np.sin(ax)
# plt.plot(ax, ay)
# Fig.03
#####################4.柱状图######################
# plt.bar([1, 2, 3], [4 ,5, 6])
# Fig.04
#####################5.散点图######################
cx = np.random.ranf(1000)
cy = np.random.ranf(1000)
# plt.scatter(cx, cy)
# Fig.05
#####################6.饼状图######################
# plt.pie([1, 2, 3])
# Fig.06
#####################7.量场图######################
dx, dy = np.mgrid[0:10, 0:10]
# plt.quiver(dx, dy)
# Fig.07
#####################8.等高线图######################
ex = np.linspace(-5, 5, 500)
ey = np.linspace(-5, 5, 500)
eX, eY = np.meshgrid(ex, ey)
eZ = (1 - eX / 2 + eX ** 3 + eY ** 4) * np.exp(-eX ** 2 - eY ** 2)
# plt.contourf(eX, eY, eZ)
# Fig.08
# plt.show()