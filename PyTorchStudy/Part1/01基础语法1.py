import torch
import numpy as np
# 创建空白张量
print(torch.empty(5, 3))
# tensor([[0.0000, 0.0000, 0.0000],
#         [0.0000, 0.0000, 0.0000],
#         [0.0000, 0.0000, 0.0000],
#         [0.0000, 0.0000, 0.0000],
#         [0.0000, 0.0000, 0.0000]])
# 创建随机张量
print(torch.rand(5, 3))
# tensor([[0.4653, 0.0203, 0.5189],
#         [0.8862, 0.7012, 0.2494],
#         [0.1939, 0.1832, 0.3353],
#         [0.4707, 0.9818, 0.7083],
#         [0.3634, 0.3762, 0.5878]])
# 创建元素全0的张量
print(torch.zeros(5, 3, dtype=torch.long))
# tensor([[0, 0, 0],
#         [0, 0, 0],
#         [0, 0, 0],
#         [0, 0, 0],
#         [0, 0, 0]])
# 使用现有数据创建张量
x = torch.tensor([5.5, 3])
# print(x)
# tensor([5.5000, 3.0000])
# 使用现有张量创建新的张量
x = x.new_ones(5, 3, dtype=torch.double)
# print(x)
# tensor([[1., 1., 1.],
#         [1., 1., 1.],
#         [1., 1., 1.],
#         [1., 1., 1.],
#         [1., 1., 1.]], dtype=torch.float64)
# 更改类型与值，但是不改变形状
x = torch.randn_like(x, dtype=torch.float)
print(x)
# tensor([[-0.5739, -0.1703,  1.0657],
#         [ 1.1273, -0.6471,  0.3718],
#         [-0.5683, -1.0120,  0.2920],
#         [-0.7861,  0.3087, -0.6670],
#         [ 0.0418,  0.3758,  0.9543]])
# 获取张量的形状
print(x.size())
# torch.Size([5, 3])